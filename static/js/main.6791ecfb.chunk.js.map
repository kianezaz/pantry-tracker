{"version":3,"sources":["components/item.jsx","components/itemsList.jsx","services/authService.js","services/authHeader.js","components/addItem.jsx","components/recipe.jsx","components/recipeList.jsx","assets/grocery-produce.jpg","components/login.jsx","components/register.jsx","components/Navbar/NavbarElements.js","components/Navbar/index.jsx","components/privateRoute.jsx","App.js","reportWebVitals.js","index.js"],"names":["moment","require","Item","props","currDate","Date","toISOString","textColor","item","expirationDate","className","name","count","format","onClick","onIncrement","onDecrement","onDelete","ItemsList","style","display","width","Dropdown","Toggle","variant","Menu","sortByName","sortByExpirationDate","items","map","_id","API_URL","username","password","axios","post","then","res","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","authHeader","user","AddItem","onChangeName","bind","onChangeCount","onChangeDate","onSubmit","validDate","extractDate","state","nameError","countError","expirationDateError","e","this","setState","target","value","dateString","test","parts","split","day","parseInt","month","year","invalidName","invalidCount","invalidDate","undefined","isNaN","preventDefault","validSubmission","userId","AuthService","id","headers","console","log","itemHandler","window","location","error","backgroundColor","type","onChange","styleTextBox","placeholder","React","Component","Recipe","recipe","src","image","presentIngredients","ingredient","missingIngredients","RecipeList","useState","recipeList","setRecipeList","useEffect","mounted","ingredients","join","get","url","recipes","title","usedIngredients","missedIngredients","length","Login","setUsername","setPassword","message","setMessage","history","useHistory","backgroundImage","background","height","backgroundPosition","backgroundRepeat","backgroundSize","push","pathname","err","resMessage","response","toString","required","role","Register","setEmail","success","setSuccess","Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","NavBtn","SignOutBtn","button","Navbar","isLoggedIn","to","PrivateRoute","render","rest","from","App","list","setList","useLocation","incrementItem","newCount","put","updatedList","index","indexOf","decrementItem","deleteItem","delete","filter","currItem","handleNewItem","sortedList","sort","a","b","catch","key","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6791ecfb.chunk.js","sourcesContent":["import React, { Component } from 'react'\nconst moment = require('moment');\n\nconst Item = (props) => {\n    const currDate = new Date().toISOString();\n    const textColor = props.item.expirationDate > currDate ? \"text-dark\" : \"text-danger\";\n    return (\n        <tr>\n            <td className={textColor}>{props.item.name}</td>\n            <td className={textColor}>{props.item.count}</td>\n            <td className={textColor}>{moment(props.item.expirationDate).format('MMMM Do YYYY')}</td>\n            <td>\n                <button onClick={() => props.onIncrement(props.item)} className= \"btn btn-dark btn-sm\">Increment</button> \n                {\"  |  \"} \n                <button onClick={() => props.onDecrement(props.item)} className=\"btn btn-dark btn-sm\">Decrement</button>\n                {\"  |  \"} \n                <button onClick={() => props.onDelete(props.item)} className=\"btn btn-dark btn-sm\">Delete</button>\n            </td>\n        </tr>\n    )\n}\n\nexport default Item;","import React from 'react';\nimport Item from './item';\nimport Dropdown from 'react-bootstrap/Dropdown'\n\n\nconst ItemsList = (props) => {\n\n    const getItemsList = () => {\n        return props.items.map(item => {\n            return <Item item={item} onIncrement={props.onIncrement} onDecrement={props.onDecrement} onDelete={props.onDelete} key={item._id}/>\n        })\n    }\n\n    return(\n        <div>\n            <h3>Logged Pantry Items</h3>\n            \n            <div style={{ display: 'block', \n                  width: 700}}>\n                <Dropdown>\n                    <Dropdown.Toggle variant=\"secondary\">\n                    Sort by\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item onClick={props.sortByName}>\n                            Name\n                        </Dropdown.Item>\n                        <Dropdown.Item onClick={props.sortByExpirationDate}>\n                            Expiration Date\n                        </Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n            </div>\n\n            <table className=\"table table-striped\">\n                <thead className=\"thead-dark\">\n                    <tr>\n                        <th>Item</th>\n                        <th>Quantity</th>\n                        <th>Expiration Date</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {getItemsList()}\n                </tbody>\n            </table>\n        </div>\n    )\n\n    /*\n\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n        axios.get(\"http://localhost:5000/pantry\")\n            .then(res => {\n                setList(res.data);\n            })\n            .catch(err => console.log(err));\n    }, []);\n\n    const getItemsList = () => {\n        return list.map(item => {\n            return <Item item={item} onIncrement={incrementItem} onDecrement={decrementItem} key={item._id}/>\n        })\n    }\n\n    function incrementItem(item) {\n        const newCount = item.count + 1;\n        axios.put(`http://localhost:5000/pantry/${item._id}`, {\n            count: newCount\n        });\n        const updatedList = [...list];\n        const index = updatedList.indexOf(item);\n        updatedList[index].count = newCount;\n        setList(updatedList);\n    }\n\n    function decrementItem(item) {\n        const newCount = item.count - 1;\n        if (newCount == 0) {\n            axios.delete(`http://localhost:5000/pantry/${item._id}`);\n            setList(list.filter(currItem => currItem !== item));\n        }\n        else {\n            axios.put(`http://localhost:5000/pantry/${item._id}`, {\n                count: newCount\n            });\n            const updatedList = [...list];\n            const index = updatedList.indexOf(item);\n            updatedList[index].count = newCount;\n            setList(updatedList);\n        }\n    }\n\n    return(\n        <div>\n            <h3>Logged Pantry Items</h3>\n            <table className=\"table table-striped\">\n                <thead className=\"thead-dark\">\n                    <tr>\n                        <th>Item</th>\n                        <th>Quantity</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {getItemsList()}\n                </tbody>\n            </table>\n        </div>\n    )\n    */\n}\n\nexport default ItemsList;","import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/user/';\n\nconst login = (username, password) => {\n    return axios.post(API_URL + \"signin\", {\n        username: username,\n        password: password\n    })\n    .then(res => {\n        if (res.data.accessToken) {\n            localStorage.setItem(\"user\", JSON.stringify(res.data));\n        }\n\n        return res.data;\n    });\n}\n\nconst logout = () => {\n    localStorage.removeItem(\"user\");\n}\n\nconst register = (username, email, password) => {\n    return axios.post(API_URL + \"signup\", {\n        username: username,\n        email: email,\n        password: password\n    });\n}\n\nconst getCurrentUser = () => {\n    return JSON.parse(localStorage.getItem(\"user\"));\n}\n\nexport default { login, logout, register, getCurrentUser };","export default function authHeader() {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    if (user && user.accessToken) {\n        return { 'x-access-token': user.accessToken };\n    }\n    else {\n        return {};\n    }\n}","import React, { Component } from 'react';\nimport { useState, useEffect } from 'react';\nimport Datepicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport axios from 'axios';\nimport AuthService from '../services/authService';\nimport authHeader from '../services/authHeader';\nimport moment from 'moment';\n\nclass AddItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeCount = this.onChangeCount.bind(this);\n        this.onChangeDate = this.onChangeDate.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.validDate = this.validDate.bind(this);\n        this.extractDate = this.extractDate.bind(this);\n\n        this.state = {\n            name: \"\",\n            nameError: false,\n            count: \"\",\n            countError: false,\n            expirationDate: \"\",\n            expirationDateError: false\n        }\n    }\n\n    onChangeName(e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n\n    onChangeCount(e) {\n        this.setState({\n            count: e.target.value\n        });\n    }\n\n    validDate(dateString) {\n        if (!/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(dateString)) {\n            return false;\n        }\n        return true;\n    }\n\n    extractDate(dateString) {\n        const parts = dateString.split(\"/\");\n        const day = parseInt(parts[1]);\n        const month = parseInt(parts[0]) - 1;\n        const year = parseInt(parts[2]);\n        return new Date(year, month, day);\n    }\n\n    validSubmission(name, count, expirationDate) {\n        let invalidName, invalidCount, invalidDate = false;\n        if (name === \"\" || name === undefined) {\n            invalidName = true;\n        }\n        this.setState({\n            nameError: invalidName\n        })\n        if (isNaN(parseInt(count))) {\n            invalidCount = true;\n        }\n        this.setState({\n            countError: invalidCount\n        });\n        if (!this.validDate(expirationDate)) {\n            invalidDate = true;\n        }\n        this.setState({\n            expirationDateError: invalidDate\n        });\n        if (invalidName || invalidCount || invalidDate) {\n            return false;\n        }\n        return true;\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        if (!this.validSubmission(this.state.name, this.state.count, this.state.expirationDate)) {\n            return;\n        }\n        const date = this.extractDate(this.state.expirationDate);\n        if (date === null) {\n            console.log(\"Enter correct date format\");\n            return;\n        }\n        const parts = this.state.expirationDate.split(\"/\");\n        const day = parseInt(parts[1]);\n        const month = parseInt(parts[0]) - 1;\n        const year = parseInt(parts[2]);\n\n        const item = {\n            name: this.state.name,\n            count: this.state.count,\n            expirationDate: new Date(year, month, day),\n            userId: AuthService.getCurrentUser().id\n        };\n\n        axios.post(\"http://localhost:5000/pantry/add\", item, {\n            headers: authHeader()\n        })\n            .then(res => {\n                console.log(res.data);\n                this.props.itemHandler(res.data);\n            });\n\n        window.location = '/pantry'\n    }\n\n    onChangeDate(e) {\n        this.setState({\n            expirationDate: e.target.value\n        });\n    }\n\n    styleTextBox(error) {\n        if (error) {\n            return {\n                backgroundColor: \"rgba(255,0,0,.5)\"\n            }\n        }\n        else {\n            return {\n                backgroundColor: \"white\"\n            }\n        }\n    }\n\n    render() { \n        return (\n        <div>\n            <h3>Add new item to pantry</h3>\n            <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                    <label>Name: </label>\n                    <input\n                        type=\"text\" \n                        className=\"form-control\"\n                        value={this.state.name}\n                        onChange={this.onChangeName}\n                        style={this.styleTextBox(this.state.nameError)}/>\n                </div>\n                <div className=\"form-group\">\n                    <label>Quantity: </label>\n                    <input \n                        type=\"text\"\n                        className=\"form-control\" \n                        value={this.state.count} \n                        onChange={this.onChangeCount}\n                        style={this.styleTextBox(this.state.countError)}/>\n                </div>\n                <div className=\"form-group\">\n                    <label>Expiration Date: </label>\n                    <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"MM/DD/YYYY\"\n                        onChange={this.onChangeDate}\n                        style={this.styleTextBox(this.state.expirationDateError)}/>\n                </div>\n\n                \n\n                <div className=\"form-group\">\n                    <input \n                        type=\"submit\" \n                        value=\"Add Item to Pantry\" \n                        className=\"btn btn-primary\" \n                    />\n                </div>\n            </form>\n        </div>\n        );\n    }\n}\n \nexport default AddItem;","import React, { useState, useEffect } from 'react';\n\nconst Recipe = props => {\n    return (\n        <div>\n            <h3 className=\"font-weight-bold\">{props.recipe.name}</h3>\n            <img src={props.recipe.image}></img>\n            <ul className=\"list-group list-group-flush\">\n                {props.recipe.presentIngredients.map(ingredient => {\n                    return (\n                        <li className=\"list-group-item\" key={ingredient.id}><p className=\"text-success\">{ingredient.name}</p></li>\n                    );\n                })}\n                {props.recipe.missingIngredients.map(ingredient => {\n                    return (\n                        <li className=\"list-group-item\" key={ingredient.id}><p className=\"text-danger\">{ingredient.name}</p></li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n}\n\nexport default Recipe;","import React, { Component } from 'react'\nimport { useState, useEffect } from 'react';\nimport Recipe from './recipe';\nimport axios from 'axios';\n\nconst RecipeList = (props) => {\n    const [recipeList, setRecipeList] = useState([]);\n\n    useEffect(() => {\n        let mounted = true;\n        let ingredients = props.items.map(item => item.name).join(',+');\n        if (true) {\n            axios.get('http://localhost:5000/recipes/apiKey')\n            .then(res => {\n                let url = `https://api.spoonacular.com/recipes/findByIngredients?apiKey=${res.data}&ingredients=${ingredients}`;\n                axios.get(url)\n                    .then(recipes => {\n                        console.log(recipes);\n                        if (mounted) {\n                            setRecipeList(recipes.data.map(recipe => {\n                                return ({\n                                    id: recipe.id,\n                                    name: recipe.title,\n                                    presentIngredients: recipe.usedIngredients.map(ingredient => {\n                                        return {\n                                            name: ingredient.name,\n                                            id: ingredient.id\n                                        }\n                                    }),\n                                    missingIngredients: recipe.missedIngredients.map(ingredient => {\n                                        return {\n                                            name: ingredient.name,\n                                            id: ingredient.id\n                                        }\n                                    }),\n                                    image: recipe.image\n                                });\n                            }));\n                        }\n                    });\n            })\n        }\n        return () => { mounted = false };\n    }, []);\n\n    function getRecipeList() {\n        return (\n            recipeList.map(recipe => {\n                return (\n                    <li className=\"list-group-item\" key={recipe.id}>\n                        <Recipe recipe={recipe} />\n                    </li>\n                );\n            })\n        );\n    }\n\n    if (recipeList.length > 0) {\n        return (\n            <ul className=\"list-group\">\n                {getRecipeList()}\n            </ul>\n        );\n    }\n\n    else {\n        return (\n            <p>Add some ingredients to find suggested recipes!</p>\n        );\n    }\n\n}\n\nexport default RecipeList;\n","export default __webpack_public_path__ + \"static/media/grocery-produce.74e712c1.jpg\";","import './login.css';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport background from '../assets/grocery-produce.jpg'\n\nimport AuthService from '../services/authService';\n\nconst Login = (props) => {\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n\n    let history = useHistory();\n\n    function onChangeUsername(e) {\n        setUsername(e.target.value);\n    }\n\n    function onChangePassword(e) {\n        setPassword(e.target.value);\n    }\n\n    function onSubmit(e) {\n        e.preventDefault();\n\n        AuthService.login(username, password)\n        .then(res => {\n            history.push({ pathname: \"/pantry\" });\n        },\n        err => {\n            const resMessage = (\n                err.response &&\n                err.response.data &&\n                err.response.data.message\n            ) ||\n                err.message ||\n                err.toString();\n            \n            setMessage(resMessage);\n        });\n    }\n\n    function onRegister(e) {\n        e.preventDefault()\n        window.location=\"/signup\"\n    }\n\n    return (\n        <div style={{ \n            backgroundImage: `url(${background})`,\n            height: \"100vh\",\n            backgroundPosition: \"center\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\"\n          }}>\n\n            <div className=\"form-container\">\n                <form onSubmit={onSubmit}>\n                    <div className=\"inputs-container\">\n                        <div className=\"form-group\">\n                            <label>Username: </label>\n                            <input \n                                required \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={username}\n                                onChange={onChangeUsername}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label id=\"password\">Password: </label>\n                            <input \n                                required \n                                type=\"password\" \n                                className=\"form-control\"\n                                value={password}\n                                onChange={onChangePassword}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                id=\"submit-button\" \n                                type=\"submit\"\n                                className=\"btn btn-primary\"\n                                value=\"Log in\"\n                            />\n                        </div>\n                        <button id=\"register-button\" onClick={onRegister}>New user? Sign up</button>\n                    </div>\n                    \n                </form>\n\n            </div>\n            {message && (\n                    <div className=\"form-group\">\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            {message}\n                        </div>\n                    </div>\n                )}\n        </div>\n    )\n}\n\nexport default Login;","import React, { useState, useEffect } from 'react';\nimport './register.css';\nimport background from '../assets/grocery-produce.jpg'\n\n\nimport AuthService from '../services/authService';\n\nconst Register = (props) => {\n\n    const [email, setEmail] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [success, setSuccess] = useState(false);\n\n    function onChangeEmail(e) {\n        setEmail(e.target.value);\n    }\n\n    function onChangeUsername(e) {\n        setUsername(e.target.value);\n    }\n\n    function onChangePassword(e) {\n        setPassword(e.target.value);\n    }\n\n    function onSubmit(e) {\n        e.preventDefault();\n\n        setMessage(\"\");\n        setSuccess(false);\n\n        AuthService.register(username, email, password)\n        .then(res => {\n            setMessage(res.data.message);\n            setSuccess(true);\n        },\n            err => {\n                const resMessage = (\n                    err.response &&\n                    err.response.data &&\n                    err.response.data.message\n                    ) ||\n                    err.message ||\n                    err.toString();\n\n                setMessage(resMessage);\n                setSuccess(false);\n            }\n        );\n    }\n\n    function onLogin(e) {\n        window.location=\"/login\"\n    }\n\n    return (\n        <div style={{ \n            backgroundImage: `url(${background})`,\n            height: \"100vh\",\n            backgroundPosition: \"center\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\"\n          }}>\n            {!success && (\n                <div className=\"form-container\">\n                    <form onSubmit={onSubmit}>\n                        <div className=\"form-group\">\n                            <label>Email: </label>\n                            <input \n                                required \n                                type=\"email\" \n                                className=\"form-control\"\n                                value={email}\n                                onChange={onChangeEmail}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Username: </label>\n                            <input \n                                required \n                                type=\"text\" \n                                className=\"form-control\"\n                                value={username}\n                                onChange={onChangeUsername}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Password: </label>\n                            <input \n                                required \n                                type=\"password\" \n                                className=\"form-control\"\n                                value={password}\n                                onChange={onChangePassword}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                id=\"submit-button\"\n                                type=\"submit\"\n                                value=\"Register\"\n                            />\n                        </div>\n                    </form>\n                </div>\n                \n            )}\n\n            {success && (\n                <button id=\"success\" className=\"btn btn-primary\" onClick={onLogin}>Click to Log In</button>\n            )}\n            \n            {message && (\n                <div className=\"form-group\">\n                    <div\n                        className={ success ? \"alert alert-success\" : \"alert alert-danger\" }\n                        role=\"alert\"\n                    >\n                        {message}\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Register;","import styled from 'styled-components'\nimport { NavLink as Link } from 'react-router-dom'\nimport {FaBars} from 'react-icons/fa'\n\nexport const Nav = styled.nav`\n    background: #000;\n    height: 80px;\n    display: flex;\n    justify-content: space-between;\n    padding: 0.5rem calc((100vw - 1000px) / 2);\n    z-index: 10;\n`\n\nexport const NavLink = styled(Link)`\n    color: #fff;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    padding: 0 1rem;\n    height: 100%;\n    cursor: pointer;\n`\n\nexport const Bars = styled(FaBars)`\n    display: none;\n    color: #fff;\n\n    @media screen and (max-width: 768px) {\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        transform: translate(-100%, 75%);\n        font-size: 1.8rem;\n        cursor: ponter;\n    }\n`\n\nexport const NavMenu = styled.div`\n    display: flex;\n    align-items: center;\n    margin-right: -24px;\n\n    @media screen and (max-width: 768px) {\n        display: none;\n    }\n`\n\nexport const NavBtn = styled.nav`\n    display: flex;\n    align-items: center;\n    margin-right: 24px;\n\n    @media screen and (max-width: 768px) {\n        display: none;\n    }\n`\n\nexport const SignOutBtn = styled.button`\n    border-radius: 4px;\n    background: #256ce1;\n    padding: 10px 22px;\n    color: #fff;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    transition: all 0.2s ease-in-out;\n    text-decoration; none;\n\n    $:hover {\n        transition: all 0.2s ease-in-out;\n        background: #fff;\n        color: #010606;\n    }\n`\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {Nav, NavLink, Bars, NavMenu, NavBtn, SignOutBtn} from './NavbarElements'\nimport AuthService from '../../services/authService';\n\nconst Navbar = (props) => {\n    function onSignOut(e) {\n        AuthService.logout();\n        window.location = \"/login\";\n    }\n\n    if (!props.isLoggedIn) {\n        return null;\n    }\n    return (\n        <div>\n            <Nav>\n                <NavLink to=\"/\">\n                    <h1>Pantry Tracker</h1>\n                </NavLink>\n                <Bars />\n                <NavMenu>\n                    <NavLink to=\"/pantry\">\n                        Home\n                    </NavLink>\n                    <NavLink to=\"/add\">\n                        Add Item\n                    </NavLink>\n                    <NavLink to=\"/recipes\">\n                        Recipes\n                    </NavLink>\n                </NavMenu>\n                <NavBtn>\n                    <SignOutBtn onClick={onSignOut}>Sign Out</SignOutBtn>\n                </NavBtn>\n            </Nav>\n        </div>\n    );\n}\n\nexport default Navbar;","import React from 'react'\nimport AuthService from '../services/authService'\nimport { Redirect, Route } from 'react-router-dom'\n\nconst PrivateRoute = ({ render: Component, ...rest }) => {\n\n  // Add your own authentication on the below line.\n  const user = AuthService.getCurrentUser();\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        user ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute","import './App.css';\nimport {Route, Switch, useLocation} from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport ItemsList from './components/itemsList';\nimport AddItem from './components/addItem';\nimport RecipeList from './components/recipeList';\nimport Login from './components/login';\nimport Register from './components/register';\nimport AuthService from './services/authService';\nimport authHeader from './services/authHeader';\nimport axios from 'axios';\nimport Navbar from './components/Navbar/index';\nimport PrivateRoute from './components/privateRoute';\n\nfunction App() {\n\n  const [list, setList] = useState([]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      axios.get(\"http://localhost:5000/pantry?userId=\" + user.id, {\n        headers: authHeader()\n      })\n          .then(res => {\n            setList(res.data);\n          })\n          .catch(err => console.log(err));\n    }\n  }, [location.key]);\n\n\n  function incrementItem(item) {\n      const newCount = item.count + 1;\n      axios.put('http://localhost:5000/pantry?id=' + item._id, {\n          count: newCount\n      }, {\n        headers: authHeader()\n      });\n      const updatedList = [...list];\n      const index = updatedList.indexOf(item);\n      updatedList[index].count = newCount;\n      setList(updatedList);\n  }\n\n  function decrementItem(item) {\n      const newCount = item.count - 1;\n      if (newCount == 0) {\n          deleteItem(item);\n      }\n      else {\n          axios.put('http://localhost:5000/pantry?id=' + item._id, {\n              count: newCount\n          }, {\n            headers: authHeader()\n          });\n          const updatedList = [...list];\n          const index = updatedList.indexOf(item);\n          updatedList[index].count = newCount;\n          setList(updatedList);\n      }\n  }\n\n  function deleteItem(item) {\n    axios.delete('http://localhost:5000/pantry/?id=' + item._id + \"&userId=\" + AuthService.getCurrentUser().id, {\n      headers: authHeader()\n    });\n    setList(list.filter(currItem => currItem !== item));\n  }\n\n  function handleNewItem(item) {\n    const updatedList = [...list];\n    updatedList.push(item);\n    setList(updatedList);\n  }\n\n  function sortByName() {\n    let sortedList = [...list];\n    setList(sortedList.sort(function(a,b) {\n      if (a.name > b.name) {\n        return 1;\n      }\n      else if (a.name < b.name) {\n        return -1;\n      }\n      else {\n        return 0;\n      }\n    }));\n  }\n\n  function sortByExpirationDate() {\n    let sortedList = [...list];\n    setList(sortedList.sort(function(a, b) {\n      if (a.expirationDate > b.expirationDate) {\n        return 1;\n      }\n      else if (a.expirationDate < b.expirationDate) {\n        return -1;\n      }\n      else {\n        return 0;\n      }\n    }));\n  }\n\n  return (\n      <div>\n        <Navbar isLoggedIn={AuthService.getCurrentUser()}/>\n\n        <Switch>\n          <Route exact path = \"/signup\" component={Register} />\n          <Route exact path=\"/\" component={Login}/>\n          <Route exact path=\"/login\" component={Login} />\n          <PrivateRoute exact path=\"/pantry\" render={(props) => <ItemsList {...props} items={list} onIncrement={incrementItem} onDecrement={decrementItem} onDelete={deleteItem} sortByName={sortByName} sortByExpirationDate={sortByExpirationDate} />} />\n          <PrivateRoute exact path=\"/add\" render={(props) => <AddItem itemHandler={handleNewItem} />} />\n          <PrivateRoute exact path = \"/recipes\" render={(props) => <RecipeList items={list} />} />\n        </Switch>\n      </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}